local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService") 

local PictureTool = script.Parent.Parent

local player = game:GetService("Players").LocalPlayer
local camera = workspace.CurrentCamera
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local mouse = player:GetMouse()

local Animations = ReplicatedStorage.Animations.Picture
local Events = ReplicatedStorage.Events.Picture

local paper = PictureTool:WaitForChild("Paper")
local pictureSurfaceGui = paper.SurfaceGui

local PictureHoldAnim
local PlacePictureConnection
local PlacementConnection

local paperPreview

local PictureClientModule = {}

function Preview(picture)
	for _, v in pairs(workspace.Temp:GetChildren()) do
		v:Destroy()
	end
	
	if picture:IsA("Tool") then
		for _, part in pairs(picture:GetChildren()) do
			if part.Name == "Paper" then
				part.Transparency = 1
				paperPreview = ReplicatedStorage.Tools.Paper:Clone()
				paperPreview.Parent = workspace.Temp
				paperPreview.Transparency = 0.8
			end
		end
	end
end

function PictureClientModule.Equip()
	local Character = player.Character or player.CharacterAdded:Wait()
	local Humanoid = Character:FindFirstChild('Humanoid')

	PictureHoldAnim = Humanoid:LoadAnimation(Animations.PictureHold)
	pictureSurfaceGui.Adornee = paper
	PictureHoldAnim:Play()

PlacePictureConnection = UserInputService.InputBegan:Connect(function(input, processed)
	if not processed and input.KeyCode == Enum.KeyCode.F then
		Preview(PictureTool)
		if paperPreview then
			PlacementConnection = RunService.RenderStepped:Connect(function()
				local mouseRay = camera:ScreenPointToRay(mouse.X, mouse.Y)
				local rayStart = camera.CFrame.Position
				local rayDirection = (mouse.Hit.p - rayStart).unit

				local raycastParams = RaycastParams.new()

				local raycastResult = game.Workspace:Raycast(rayStart, rayDirection * 100, raycastParams)
				print(raycastResult)
				if raycastResult then
					local hitPart = raycastResult.Instance
					local hitPosition = raycastResult.Position
					local hitNormal = raycastResult.Normal
					
					local lookVector = -rayDirection
					local upVector = hitNormal
					local rightVector = upVector:Cross(Vector3.new(0, 1, 0))
					
					local rotationMatrix = CFrame.fromMatrix(Vector3.new(), rightVector, upVector)
					paperPreview.CFrame = CFrame.new(hitPosition) * rotationMatrix
				end
			end)
		end
	end
end)
end

function PictureClientModule.Unequip()
	PictureHoldAnim:Stop()
	pictureSurfaceGui.Adornee = nil
	if PlacePictureConnection then
		PlacePictureConnection:Disconnect()
	end
	if PlacementConnection then
		PlacementConnection:Disconnect()
	end
	if paperPreview then
		paperPreview:Destroy()
	end
end

return PictureClientModule
