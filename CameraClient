local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()
local character = player.Character or player.CharacterAdded:Wait()

local Animations = ReplicatedStorage.Animations.Camera
local Events = ReplicatedStorage.Events
local Sounds = ReplicatedStorage.Sounds
local captureEvent = Events.Camera.CapturePhoto

local currentCamera = workspace.CurrentCamera
local cameraTool = script.Parent

local updateCameraConnection
local zoomConnection

local ZOOM_Speed = 5
local MIN_FOV = 50
local MAX_FOV = 120

local function zoom(input, processed)
	if input.UserInputType == Enum.UserInputType.MouseWheel then
		local delta = input.Position.Z
		local currentFOV = currentCamera.FieldOfView
		local newFOV = currentFOV - delta * ZOOM_Speed

		newFOV = math.clamp(newFOV, MIN_FOV, MAX_FOV)
		currentCamera.FieldOfView = newFOV
	end
end

local function updateCamera()
	local toolPosition = cameraTool.CameraView.Position
	local forwardOffset = cameraTool.CameraView.CFrame.LookVector * 1
	local newToolPosition = toolPosition + forwardOffset
	local newLookAtPosition = newToolPosition + cameraTool.CameraView.CFrame.LookVector
	currentCamera.CFrame = CFrame.new(newToolPosition, newLookAtPosition)
end


local function inCamera()
	currentCamera.CameraType = Enum.CameraType.Scriptable
	currentCamera.CFrame = cameraTool.CameraView.CFrame
	updateCameraConnection = RunService.RenderStepped:Connect(updateCamera)
	zoomConnection = UserInputService.InputChanged:Connect(zoom)
end

local function outCamera()
	currentCamera.CameraType = Enum.CameraType.Custom
	currentCamera.FieldOfView = 70
	updateCameraConnection:Disconnect()
	zoomConnection:Disconnect()
end

local function captureImage()
	local newCamera = currentCamera:Clone()
	newCamera.Parent = ReplicatedFirst.SurfaceGui
	ReplicatedFirst.SurfaceGui.Picture.CurrentCamera = newCamera
	currentCamera.CameraType = Enum.CameraType.Custom

	local Objects = game.ReplicatedFirst.SurfaceGui.Picture

	local regionSize = Vector3.new(50, 50, 50) 
	local regionPosition = character.HumanoidRootPart.Position + character.HumanoidRootPart.CFrame.LookVector * 25 

	local Region = Region3.new(regionPosition - (regionSize / 2), regionPosition + (regionSize / 2))
	Objects:ClearAllChildren()

	for _, v in pairs(workspace:FindPartsInRegion3(Region, nil, 1000)) do
		v:Clone().Parent = Objects
		print(v)
	end

	for _, Player in pairs(game.Players:GetPlayers()) do
		local Copy = game.ReplicatedFirst.SurfaceGui:Clone()
		Copy.Parent = Player.PlayerGui
	end
end

-- Connections
cameraTool.Equipped:Connect(inCamera)
cameraTool.Unequipped:Connect(outCamera)
cameraTool.Activated:Connect(captureImage)
